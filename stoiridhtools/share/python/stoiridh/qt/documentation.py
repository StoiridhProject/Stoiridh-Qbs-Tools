# -*- coding: utf-8 -*-
####################################################################################################
##                                                                                                ##
##            Copyright (C) 2015-2016 William McKIE                                               ##
##                                                                                                ##
##            This program is free software: you can redistribute it and/or modify                ##
##            it under the terms of the GNU General Public License as published by                ##
##            the Free Software Foundation, either version 3 of the License, or                   ##
##            (at your option) any later version.                                                 ##
##                                                                                                ##
##            This program is distributed in the hope that it will be useful,                     ##
##            but WITHOUT ANY WARRANTY; without even the implied warranty of                      ##
##            MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                       ##
##            GNU General Public License for more details.                                        ##
##                                                                                                ##
##            You should have received a copy of the GNU General Public License                   ##
##            along with this program.  If not, see <http://www.gnu.org/licenses/>.               ##
##                                                                                                ##
####################################################################################################
from os import remove
from pathlib import Path
from shutil import Error, copyfile, copytree, rmtree


class HtmlDirectoryNotFound(FileNotFoundError):
    """A subclass of FileNotFoundError, raised when no Html directory has not been found."""
    pass


class Documentation:
    """Install the documentation artefacts generated by qdoc."""
    def __init__(self, name, source, target):
        """Constructs a *Documentation* object.

        **name** corresponds to the directory name where the html directory will be move.

        **source** corresponds to the build directory where the html directory and one or more qch
        files have been generated by qdoc.

        **target** corresponds to the install directory where the content of the **source**
        directory will be move into it.
        """
        self.name = name
        self.source = Path(source)
        self.target = Path(target, self.name)

    def install(self):
        """Installs the content of the **source** directory into the **target** directory."""
        if not (self.source or self.target).is_dir():
            raise NotADirectoryError("[Python] Qt.Documentation: source and/or target is not a "
                                     "directory.")

        html = Path(self.source, 'html')

        if not (html.is_dir() or html.exists()):
            raise HtmlDirectoryNotFound("[Python] Qt.Documentation: html directory not found, "
                                        "no action required.")

        qches = list(Path(self.source).glob('*.qch'))

        # remove existing html directory and qch files
        if self.target.exists() and self.target.is_absolute():
            rmtree(str(self.target), True)

        target_qches = [Path(self.target.parent, p.name) for p in qches]

        for qch in target_qches:
            if qch.exists() and qch.is_absolute():
                try:
                    remove(str(qch))
                except OSError as e:
                    raise e

        # copy
        try:
            copytree(str(html), str(Path(self.target, 'html')))
        except Error as e:
            print("[Python] Error while copy of the html directory.")
            for src, dst, error in e:
                print(src, dst, error)

        for index, value in enumerate(qches):
            try:
                copyfile(str(qches[index]), str(target_qches[index]))
            except OSError as e:
                raise e
